{"version":3,"sources":["webpack:///./src/components/Footer.tsx","webpack:///./src/pages/index.tsx"],"names":["Footer","react_default","a","createElement","style","marginTop","rhythm","paddingTop","href","__webpack_require__","d","__webpack_exports__","pageQuery","BlogIndex","_ref","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","Layout","SEO","keywords","Bio","map","_ref2","node","frontmatter","fields","slug","key","marginBottom","gatsby_browser_entry","boxShadow","to","date","timeToRead","convertBlogTagToEmoji","tag","dangerouslySetInnerHTML","__html","description","excerpt","components_Footer"],"mappings":"kKAmBeA,EAfsB,kBACnCC,EAAAC,EAAAC,cAAA,UACEC,MAAO,CACLC,UAAWC,YAAO,KAClBC,WAAYD,YAAO,KAGrBL,EAAAC,EAAAC,cAAA,KAAGK,KAAK,kCAAR,WANF,MAQEP,EAAAC,EAAAC,cAAA,KAAGK,KAAK,iCAAR,UACAP,EAAAC,EAAAC,cAAA,WATF,+BAU8BF,EAAAC,EAAAC,cAAA,KAAGK,KAAK,wBAAR,uBCfhCC,EAAAC,EAAAC,EAAA,8BAAAC,IAwDeC,UA7C8B,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SAC9CC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACEtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjChB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAKC,SAAU,yCACfzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,MACCN,EAAMO,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACJC,EAAgBD,EAAhBC,YACFX,EAAQW,EAAYX,OAASU,EAAKE,OAAOC,KAC/C,OACEhC,EAAAC,EAAAC,cAAA,OAAK+B,IAAKJ,EAAKE,OAAOC,MACpBhC,EAAAC,EAAAC,cAAA,MACEC,MAAO,CACL+B,aAAc7B,YAAO,OAGvBL,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAMhC,MAAO,CAAEiC,UAAS,QAAYC,GAAIR,EAAKE,OAAOC,MACjDb,IAGLnB,EAAAC,EAAAC,cAAA,aACG4B,EAAYQ,KADf,MAEST,EAAKU,WAFd,kBAGSC,YAAsBV,EAAYW,MAE3CzC,EAAAC,EAAAC,cAAA,KACEwC,wBAAyB,CACvBC,OAAQb,EAAYc,aAAef,EAAKgB,cAMlD7C,EAAAC,EAAAC,cAAC4C,EAAD,QAnCN,IA+CanC,EAAS","file":"component---src-pages-index-tsx-34542d0424e3b813540c.js","sourcesContent":["import React from \"react\";\n\nimport { rhythm } from \"~/src/utils/typography\";\n\nexport const Footer: React.SFC<{}> = () => (\n  <footer\n    style={{\n      marginTop: rhythm(2.5),\n      paddingTop: rhythm(1)\n    }}\n  >\n    <a href=\"https://www.twitter.com/basspj\">Twitter</a>\n    {` | `}\n    <a href=\"https://www.github.com/basspj\">Github</a>\n    <br />\n    Photo by thomas-lefebvre on <a href=\"https://unsplash.com\">Unsplash</a>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"~/src/components/Bio\";\nimport Layout from \"~/src/components/Layout\";\nimport SEO from \"~/src/components/SEO\";\nimport Footer from \"~/src/components/Footer\";\n\nimport { rhythm } from \"~/src/utils/typography\";\nimport { convertBlogTagToEmoji } from \"~/src/utils/helpers\";\n\nconst BlogIndex: React.SFC<BlogIndexProps> = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n      <Bio />\n      {posts.map(({ node }) => {\n        const { frontmatter } = node;\n        const title = frontmatter.title || node.fields.slug;\n        return (\n          <div key={node.fields.slug}>\n            <h3\n              style={{\n                marginBottom: rhythm(1 / 4)\n              }}\n            >\n              <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                {title}\n              </Link>\n            </h3>\n            <small>\n              {frontmatter.date}\n              {` • ${node.timeToRead} min read`}\n              {` • ${convertBlogTagToEmoji(frontmatter.tag)}`}\n            </small>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: frontmatter.description || node.excerpt\n              }}\n            />\n          </div>\n        );\n      })}\n      <Footer />\n    </Layout>\n  );\n};\n\ninterface BlogIndexProps {\n  data: any;\n  location: any;\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tag\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}