{"version":3,"sources":["webpack:///./src/templates/BlogPostTemplate.tsx"],"names":["BlogPostTemplate","_ref","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_src_components_Layout__WEBPACK_IMPORTED_MODULE_4__","_src_components_SEO__WEBPACK_IMPORTED_MODULE_5__","description","excerpt","style","Object","assign","scale","display","marginBottom","rhythm","marginTop","date","timeToRead","convertBlogTagToEmoji","tag","dangerouslySetInnerHTML","__html","html","_src_components_Bio__WEBPACK_IMPORTED_MODULE_3__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","pageQuery"],"mappings":"yNAiFeA,UAxE4C,SAAAC,GAIrD,IAHJC,EAGID,EAHJC,KACAC,EAEIF,EAFJE,YACAC,EACIH,EADJG,SAEMC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAEVC,EAAgBR,EAAhBQ,YAER,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQb,SAAUA,EAAUM,MAAOH,GACjCO,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACER,MAAOG,EAAYH,MACnBS,YAAaN,EAAYM,aAAed,EAAKe,UAE/CN,EAAAC,EAAAC,cAAA,UAAKH,EAAYH,OACjBI,EAAAC,EAAAC,cAAA,KACEK,MAAKC,OAAAC,OAAA,GACAC,aAAM,IADN,CAEHC,QAAO,QACPC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MAGpBd,EAAYgB,KARf,MASSxB,EAAKyB,WATd,kBAUSC,YAAsBlB,EAAYmB,MAE3ClB,EAAAC,EAAAC,cAAA,OAAKiB,wBAAyB,CAAEC,OAAQ7B,EAAK8B,QAC7CrB,EAAAC,EAAAC,cAAA,MACEK,MAAO,CACLK,aAAcC,YAAO,MAGzBb,EAAAC,EAAAC,cAACoB,EAAA,EAAD,MAEAtB,EAAAC,EAAAC,cAAA,MACEK,MAAO,CACLI,QAAO,OACPY,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,IAGX1B,EAAAC,EAAAC,cAAA,UACGL,GACCG,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,GAAI/B,EAASgC,OAAOC,KAAMC,IAAI,QAApC,KACKlC,EAASE,YAAYH,QAI9BI,EAAAC,EAAAC,cAAA,UACGJ,GACCE,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,GAAI9B,EAAK+B,OAAOC,KAAMC,IAAI,QAC7BjC,EAAKC,YAAYH,MADpB,UAkBL,IAAMoC,EAAS","file":"component---src-templates-blog-post-template-tsx-75944ddd3b6d98ed72f3.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"~/src/components/Bio\";\nimport Layout from \"~/src/components/Layout\";\nimport SEO from \"~/src/components/SEO\";\nimport { rhythm, scale } from \"~/src/utils/typography\";\nimport { convertBlogTagToEmoji } from \"../utils/helpers\";\n\nconst BlogPostTemplate: React.SFC<BlogPostTemplateProps> = ({\n  data,\n  pageContext,\n  location\n}) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const { previous, next } = pageContext;\n\n  const { frontmatter } = post;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={frontmatter.title}\n        description={frontmatter.description || post.excerpt}\n      />\n      <h1>{frontmatter.title}</h1>\n      <p\n        style={{\n          ...scale(-1 / 5),\n          display: `block`,\n          marginBottom: rhythm(1),\n          marginTop: rhythm(-1)\n        }}\n      >\n        {frontmatter.date}\n        {` • ${post.timeToRead} min read`}\n        {` • ${convertBlogTagToEmoji(frontmatter.tag)}`}\n      </p>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      <hr\n        style={{\n          marginBottom: rhythm(1)\n        }}\n      />\n      <Bio />\n\n      <ul\n        style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0\n        }}\n      >\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n    </Layout>\n  );\n};\n\ninterface BlogPostTemplateProps {\n  data: any;\n  pageContext: any;\n  location: any;\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tag\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}